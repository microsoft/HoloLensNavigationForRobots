<launch>
  <arg name="port" default="1234"/>
  <arg name="odomFrame" default="odom"/>
  <arg name="HoloLinkedFrame" default="Head"/>
  <arg name="baseFrame" default="base_footprint"/>
  <arg name="calibrationFile" default="calibrationData.bin"/>
  <arg name="HoloLens_ip" />
  <arg name="no_static_map" default="false"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->

  <node pkg="hololens_ros_bridge" type="hololens_ros_bridge_node" name="hololens_ros_bridge_node" args="$(arg HoloLens_ip) $(arg port)"/>
  <node pkg="hololens_localizer" type="static_calibration" name="static_calibration" args="$(arg odomFrame) $(arg HoloLinkedFrame) $(arg baseFrame) $(arg calibrationFile)" output="screen" launch-prefix="xterm -e"/> 
  <node pkg="hololens_localizer" type="dynamic_adjuster.py" name="online_adjuster" />
  <node pkg="hololens_localizer" type="anchor_localizer" name="anchor_localizer" />  

  <node pkg="map_server" type="map_server" name="map_server" args="$(find navigation_launcher)/params/map.yaml" output="screen"/> 
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find husky_navigation)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find navigation_launcher)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation_launcher)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find husky_navigation)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find husky_navigation)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find husky_navigation)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
  </node>
  <node pkg="hololens_localizer" type="localizer.py" name="localizer" />
</launch>
